{"version":3,"sources":["firebase.js","redux/reducer.js","redux/adminTablechoice.js","redux/reducers.js","redux/actions.js","redux/actionTypes.js","components/adminPage/table.js","components/adminPage/auth.js","components/bookingForm.js","components/rangePicker.js","components/adminPage/BookAll.jsx","components/adminPage/ModalBtn.js","components/adminPage/menu.jsx","components/adminPage/mainAdminComponent.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","database","addDateToFirebase","task","choice","arr","ref","concat","id","set","removeRoomFromFirebase","quality","remove","initialState","tasks","state","arguments","length","undefined","action","o","get tasks","remove task","filter","type","TableChoice","set table choice","combineReducers","removeTask","setChoice","watchTaskAddedEvent","dispatch","on","snap","getTasksThunk","once","forEach","data","val","push","then","getTasks","createStore","Reducer","applyMiddleware","thunkMiddleware","AdminTable","delete","value","_this","props","columns","title","dataIndex","key","render","text","record","react_default","a","createElement","href","onClick","this","customers","rooms","Object","values","table","rowKey","style","width","dataSource","Component","connect","find","i","FormItem","es_form","Item","Auth","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","login","form","validateFields","err","userName","password","window","localStorage","setItem","location","reload","pass","fieldsError","_this2","_this$props$form","getFieldDecorator","getFieldsError","getFieldError","isFieldTouched","userNameError","passwordError","className","layout","onSubmit","clearState","validateStatus","help","rules","required","message","input","prefix","icon","color","placeholder","es_button","htmlType","disabled","keys","some","field","e","auth","create","RangePicker","leng","en","from","to","uk","ru","handleFromChange","bind","assertThisInitialized","handleToChange","onChange","_this$state","moment","diff","getDayPicker","showMonth","setState","showFromMonth","_this$state2","modifiers","start","end","datesToDisable","datesToDisableTo","before","endOf","toDate","toConsumableArray","DayPickerInput_default","format","formatDate","parseDate","dayPickerProps","disabledDays","localeUtils","MomentLocaleUtils","locale","selectedDays","toMonth","numberOfMonths","onDayClick","getInput","focus","onDayChange","el","month","fromMonth","Helmet_default","React","Option","es_select","AddForm","_this$props","onCancel","onCreate","modal","visible","onOk","okText","label","initialValue","rangePicker","BookAll","AddButton","makeArrOfDates","arrOfResults","substr","fromDay","parseInt","firstResult","secondResult","b","handleCreate","formRef","date","uuid","name","secondName","ArrOfDates","number","apply","objectSpread","resetFields","saveFormRef","marginLeft","selected","selectedRow","wrappedComponentRef","LeftMenu","handleClick","menu","defaultSelectedKeys","defaultOpenKeys","mode","ModalBtn","Admin","getItem","adminPage_menu","adminPage_table","BookingForm","leaguage","header","surname","phone","guest","dateErr","wish","ok","mailErr","phoneErr","alert","emailValidate","rule","callback","EmailValidator","phoneValidate","match","history","disabledDates","dates","_ret","gg","result","_result","sort","buff","splice","v","hash","leaguge","marginRight","marginTop","validator","bookingForm_Option","dataFromRangePicker","TextArea","withRouter","App","mainAdminComponent","bookingForm","Boolean","hostname","ReactDOM","es","store","BrowserRouter","Route","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a7b54b44.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/database\";\nvar config = {\n  apiKey: \"AIzaSyDX2zAjIzTB9fu7hadZLZmjqscraC3uTH8\",\n  authDomain: \"dodo-75272.firebaseapp.com\",\n  databaseURL: \"https://dodo-75272.firebaseio.com\",\n  projectId: \"dodo-75272\",\n  storageBucket: \"dodo-75272.appspot.com\",\n  messagingSenderId: \"1065766410382\"\n};\nfirebase.initializeApp(config);\n\nconst database = firebase.database();\nexport default database;\n//firebaseApp.firestore().settings({ timestampsInSnapshots: true })\nexport const addRoomToFirebase = task => {\n  const id = task.quality;\n\n  database.ref(`/rooms/${id}`).set(task);\n};\nexport const addDateToFirebase = (task, choice, arr) => {\n  database.ref(`/rooms/${choice}/customers/${task.id}`).set(task);\n  database.ref(`/rooms/${choice}/dates/${task.id}`).set(arr);\n};\nexport const removeRoomFromFirebase = task => {\n  database.ref(`/rooms/${task.quality}/dates/${task.id}`).remove();\n  database.ref(`/rooms/${task.quality}/customers/${task.id}`).remove();\n};\n","const initialState = [];\n\nconst tasks = (state = initialState, action) => {\n  const o = {\n    \"get tasks\": () => action.tasks,\n    // \"add task\": () => [...state, action.task],\n\n    \"remove task\": () => state.filter(task => task.id !== action.task.id)\n  };\n  return o[action.type] ? o[action.type]() : state;\n};\n\nexport default tasks;\n","const initialState = \"lux\";\n\nconst TableChoice = (state = initialState, action) => {\n  const o = {\n    \"set table choice\": () => action.tasks\n  };\n  return o[action.type] ? o[action.type]() : state;\n};\n\nexport default TableChoice;\n","import tasks from \"./reducer.js\";\nimport TableChoice from \"./adminTablechoice\";\nimport { combineReducers } from \"redux\";\nexport default combineReducers({ tasks, TableChoice });\n","import * as types from \"./actionTypes.js\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport database from \"../firebase\";\nimport thunkMiddleware from \"redux-thunk\";\nimport Reducer from \"./reducers\";\n\nexport const getTasks = tasks => ({ type: types.GET_TASKS, tasks });\nexport const addTask = task => ({ type: types.ADD_TASK, task });\nexport const removeTask = task => ({ type: types.REMOVE_TASK, task });\nexport const setChoice = tasks => ({ type: types.SET_TABLE_CHOICE, tasks });\n\n/**\n * LISTENERS\n */\n\nexport const watchTaskAddedEvent = dispatch => {\n  database.ref(`/rooms/regular/`).on(\"child_changed\", snap => {\n    dispatch(getTasksThunk());\n  });\n\n  database.ref(`/rooms/lux/`).on(\"child_changed\", snap => {\n    dispatch(getTasksThunk());\n  });\n  database.ref(`/rooms/forOne/`).on(\"child_changed\", snap => {\n    dispatch(getTasksThunk());\n  });\n  database.ref(`/rooms/twoBeds/`).on(\"child_changed\", snap => {\n    dispatch(getTasksThunk());\n  });\n  database.ref(`/rooms/regular/`).on(\"child_added\", snap => {\n    dispatch(getTasksThunk());\n  });\n\n  database.ref(`/rooms/lux/`).on(\"child_added\", snap => {\n    dispatch(getTasksThunk());\n  });\n  database.ref(`/rooms/forOne/`).on(\"child_added\", snap => {\n    dispatch(getTasksThunk());\n  });\n  database.ref(`/rooms/twoBeds/`).on(\"child_added\", snap => {\n    dispatch(getTasksThunk());\n  });\n};\n\nexport const watchTaskRemovedEvent = dispatch => {\n  database.ref(`/rooms/regular`).on(\"child_removed\", snap => {\n    dispatch(removeTask(snap.val()));\n  });\n  database.ref(`/rooms/lux`).on(\"child_removed\", snap => {\n    dispatch(removeTask(snap.val()));\n  });\n  database.ref(`/rooms/forOne`).on(\"child_removed\", snap => {\n    dispatch(removeTask(snap.val()));\n  });\n  database.ref(`/rooms/twoBeds`).on(\"child_removed\", snap => {\n    dispatch(removeTask(snap.val()));\n  });\n};\n\n/**\n * THUNKS\n */\nexport const getTasksThunk = () => dispatch => {\n  const tasks = [];\n  database\n    .ref(`/rooms/`)\n    .once(\"value\", snap => {\n      snap.forEach(data => {\n        let task = data.val();\n        tasks.push(task);\n      });\n    })\n    .then(() => dispatch(getTasks(tasks)));\n};\n\nexport default createStore(Reducer, applyMiddleware(thunkMiddleware));\n","export const ADD_TASK = \"add task\";\nexport const REMOVE_TASK = \"remove task\";\nexport const GET_TASKS = \"get tasks\";\nexport const SET_TABLE_CHOICE = \"set table choice\";\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Table } from \"antd\";\nimport { removeRoomFromFirebase } from \"../../firebase\";\nimport { getTasksThunk, watchTaskAddedEvent } from \"../../redux/actions\";\n\nclass AdminTable extends Component {\n  componentDidMount() {\n    watchTaskAddedEvent(this.props.dispatch);\n  }\n  delete = value => {\n    removeRoomFromFirebase(value);\n    this.props.dispatch(getTasksThunk());\n  };\n  columns = [\n    {\n      title: \"Имя\",\n      dataIndex: \"name\",\n      key: \"name\"\n    },\n    {\n      title: \"Фамилия\",\n      dataIndex: \"secondName\",\n      key: \"secondName\"\n    },\n    {\n      title: \"EMAIL\",\n      dataIndex: \"email\",\n      key: \"email\"\n    },\n    {\n      title: \"Номер телефона\",\n      dataIndex: \"phone\",\n      key: \"phone\"\n    },\n    {\n      title: \"заселениe\",\n      dataIndex: \"from\",\n      key: \"from\"\n    },\n    {\n      title: \"выселениe\",\n      dataIndex: \"to\",\n      key: \"to\"\n    },\n    {\n      title: \"пожелания\",\n      dataIndex: \"article\",\n      key: \"article\"\n    },\n    {\n      title: \"Action\",\n      key: \"action\",\n      render: (text, record) => (\n        <span>\n          <a href=\"javascript:void(0);\" onClick={() => this.delete(record)}>\n            Delete\n          </a>\n        </span>\n      )\n    }\n  ];\n\n  render() {\n    let customers = [];\n    if (this.props.rooms && this.props.rooms.customers) {\n      customers = Object.values(this.props.rooms.customers);\n    }\n\n    return (\n      <Table\n        rowKey=\"id\"\n        style={{ width: \"100%\" }}\n        columns={this.columns}\n        dataSource={customers}\n      />\n    );\n  }\n}\n\nconst mapState = state => ({\n  rooms: state.tasks.find(i => i.quality === state.TableChoice),\n  state: state\n});\nexport default connect(mapState)(AdminTable);\n","import React, { Component } from \"react\";\nimport { Form, Icon, Input, Button } from \"antd\";\n\nconst FormItem = Form.Item;\n\nfunction hasErrors(fieldsError) {\n  return Object.keys(fieldsError).some(field => fieldsError[field]);\n}\n\nclass Auth extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      login: \"\",\n      pass: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.props.form.validateFields();\n  }\n\n  login = () => {\n    this.props.form.validateFields((err, values) => {\n      if (err) return;\n      if (\n        values.userName === \"Elka\" &&\n        values.password === \"23a5910e-632c-4c0b-b3b9-452af2062562\"\n      ) {\n        window.localStorage.setItem(\"accesForRoomAdminPanel\", true);\n        window.location.reload();\n      } else {\n        return;\n      }\n    });\n  };\n\n  render() {\n    const {\n      getFieldDecorator,\n      getFieldsError,\n      getFieldError,\n      isFieldTouched\n    } = this.props.form;\n    // Only show error after a field is touched.\n    const userNameError =\n      isFieldTouched(\"userName\") && getFieldError(\"userName\");\n    const passwordError =\n      isFieldTouched(\"password\") && getFieldError(\"password\");\n    return (\n      <div>\n        <Form className=\"login-form\" layout=\"inline\" onSubmit={this.clearState}>\n          <div className=\"login-div\">\n            <FormItem\n              validateStatus={userNameError ? \"error\" : \"success\"}\n              help={userNameError || \"\"}\n            >\n              {getFieldDecorator(\"userName\", {\n                rules: [\n                  { required: true, message: \"Please input your username!\" }\n                ]\n              })(\n                <Input\n                  prefix={\n                    <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                  }\n                  placeholder=\"Username\"\n                />\n              )}\n            </FormItem>\n            <FormItem\n              validateStatus={passwordError ? \"error\" : \"success\"}\n              help={passwordError || \"\"}\n            >\n              {getFieldDecorator(\"password\", {\n                rules: [\n                  { required: true, message: \"Please input your Password!\" }\n                ]\n              })(\n                <Input\n                  prefix={\n                    <Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                  }\n                  type=\"password\"\n                  placeholder=\"Password\"\n                />\n              )}\n            </FormItem>\n\n            <FormItem>\n              <Button\n                className=\"login-form-button\"\n                type=\"primary\"\n                htmlType=\"submit\"\n                disabled={hasErrors(getFieldsError())}\n                onClick={e => {\n                  this.login(e);\n                }}\n              >\n                {\" \"}\n                loggin\n              </Button>\n            </FormItem>\n          </div>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default Form.create()(Auth);\n","import React, { Component } from \"react\";\nimport \"../App.css\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Button, Input, Form, Select } from \"antd\";\nimport { addDateToFirebase } from \"../firebase\";\nimport {\n  getTasksThunk,\n  watchTaskRemovedEvent,\n  watchTaskAddedEvent\n} from \"../redux/actions\";\nimport RangePicker from \"./rangePicker\";\nimport uuid from \"uuid/v4\";\nimport moment from \"moment\";\nimport * as EmailValidator from \"email-validator\";\n\nconst Option = Select.Option;\nlet choice;\nlet leng = undefined;\nclass BookingForm extends Component {\n  state = { err: false };\n  componentDidMount() {\n    const hash = this.props.location.hash;\n    choice = hash.substr(4);\n    leng = hash[1] + hash[2];\n\n    this.props.dispatch(getTasksThunk());\n\n    watchTaskAddedEvent(this.props.dispatch);\n    watchTaskRemovedEvent(this.props.dispatch);\n  }\n  leaguage = {\n    en: {\n      header: \"Please specify all required fields\",\n      name: \"Name\",\n      surname: \"Surname\",\n      phone: \"Phone number\",\n      guest: \"Number of guests\",\n      date: \"Period of stay\",\n      dateErr: \"date selection error\",\n      wish: \"Wish\",\n      ok: \"submit\",\n      err: \"This Field is required\",\n      mailErr: \"email is not valid\",\n      phoneErr: \"phone number is not valid\"\n    },\n    ru: {\n      header: \"Пожалуйста заполните все обязательные поля\",\n      name: \"Имя\",\n      surname: \"Фамилия\",\n      phone: \"Номер телефона\",\n      guest: \"Количество гостей\",\n      date: \"Период пребывания\",\n      dateErr: \"ошибка выбора даты\",\n      wish: \"Пожелания\",\n      ok: \"подтвердить\",\n      err: \"Поле обязетельно к заполнению\",\n      mailErr: \"не валидный email\",\n      phoneErr: \"не валидній номер телефона\"\n    },\n    uk: {\n      header: \"Будь ласка заповніть всі необхідні поля\",\n      name: \"Ім'я\",\n      surname: \"Прізвище\",\n      phone: \"Номер телефону\",\n      guest: \"Кількість гостей\",\n      date: \"Період проживання\",\n      dateErr: \"помилка вибора дати\",\n      wish: \"Побажання\",\n      ok: \"підтвердити\",\n      err: \"Поле обов'язкове до заповнення\",\n      mailErr: \"не валідний email\",\n      phoneErr: \"не валідний номер телефону\"\n    }\n  };\n  makeArrOfDates = (from, to) => {\n    let arrOfResults = [from];\n    if (from.substr(5, 2) === to.substr(5, 2)) {\n      const fromDay = parseInt(from.substr(8, 2), 10);\n      let result = parseInt(to.substr(8, 2), 10) - fromDay;\n\n      let i = result;\n      for (i; i > 0; i--) {\n        arrOfResults.push(from.substr(0, 8) + (fromDay + i));\n      }\n    } else if (from.substr(5, 2) !== to.substr(5, 2)) {\n      const firstResult = parseInt(to.substr(8, 2), 10);\n      const secondResult = 31 - parseInt(from.substr(8, 2), 10);\n      let i = firstResult;\n\n      for (i; i > 0; i--) {\n        arrOfResults.push(\n          to.substr(0, 8) + (parseInt(to.substr(8, 2), 10) - i + 1)\n        );\n      }\n      let b = secondResult;\n\n      for (b; b > 0; b--) {\n        arrOfResults.push(\n          from.substr(0, 8) + (parseInt(from.substr(8, 2), 10) + b)\n        );\n      }\n    }\n    return arrOfResults;\n  };\n  handleCreate = () => {\n    const form = this.props.form;\n\n    form.validateFields((err, values) => {\n      if (err) return;\n      let from = moment(values.date.from);\n      let to = moment(values.date.to);\n      if (\n        !values.date.from ||\n        !values.date.to ||\n        from <= moment().endOf(\"day\")\n      ) {\n        this.setState({ err: true });\n        return;\n      } else {\n        this.setState({ err: false });\n      }\n      values.quality = choice;\n      values.id = uuid();\n      values.leng = leng;\n      from = from.format(\"YYYY-MM-DD\");\n      to = to.format(\"YYYY-MM-DD\");\n\n      addDateToFirebase(\n        { ...values, from, to },\n        choice,\n        this.makeArrOfDates(from, to)\n      );\n      form.resetFields();\n\n      alert(\n        \"Спасибо что выбрали наш отель мы отправили письмо c подтверждением на указаный email\\n\\nДякуємо що вибрали наш готель ми відравили вам лист на вказаний email\\n\\nthank you for choosing our hotel we send you an email with confirmation\"\n      );\n    });\n  };\n  emailValidate = (rule, value, callback) => {\n    if (EmailValidator.validate(value)) {\n      callback();\n    } else {\n      callback(\"введен не валидный email\");\n    }\n  };\n  phoneValidate = (rule, value, callback) => {\n    const phoneno = /^(\\s*)?(\\+)?([- _():=+]?\\d[- _():=+]?){10,14}(\\s*)?$/;\n\n    if (value.match(phoneno) || value === \"\" || value === \" \") {\n      callback();\n    } else {\n      callback(\"введен не валидный номер телефона\");\n    }\n  };\n  onCancel = () => {\n    this.props.history.push(\"/\");\n    window.location.reload();\n  };\n  disabledDates = () => {\n    if (this.props.tasks && this.props.tasks.dates) {\n      let gg = Object.values(this.props.tasks.dates);\n      let result = [];\n      gg.forEach(i => {\n        result.push(...i);\n      });\n      result = result.sort();\n      let disabledDates = [];\n      var i = result.length;\n      while (i > 1) {\n        let buff = result.filter(i => i === result[1]);\n        if (buff.length >= this.props.tasks.number) {\n          disabledDates.push(moment(result[1], \"YYYY-MM-DD\").toDate());\n        }\n        result.splice(0, buff.length);\n        i = i - buff.length;\n      }\n      return disabledDates;\n    }\n  };\n  render() {\n    const leaguge = leng ? this.leaguage[leng] : this.leaguage.en;\n\n    const {\n      form: { getFieldDecorator }\n    } = this.props;\n\n    return (\n      // <Modal\n      //   title=\"Let's Get Started\"\n      //   className=\"GetStartedModal\"\n      //   onCancel={this.onCancel}\n      //   visible\n      //   onOk={this.handleCreate}\n      //   okText=\"Submit\"\n      // >\n      <Form\n        style={{\n          marginLeft: \"auto\",\n          width: \"80%\",\n          marginRight: \"auto\",\n          marginTop: \"2%\"\n        }}\n        layout=\"vertical\"\n      >\n        <h2>{leaguge.header}</h2>\n        <Form.Item label={leaguge.name}>\n          {getFieldDecorator(\"name\", {\n            rules: [\n              {\n                required: true,\n                message: [leaguge.err]\n              }\n            ]\n          })(<Input />)}\n        </Form.Item>\n        <Form.Item label={leaguge.surname}>\n          {getFieldDecorator(\"secondName\", {\n            rules: [{ required: true, message: [leaguge.err] }]\n          })(<Input />)}\n        </Form.Item>\n\n        <Form.Item label=\"Email\">\n          {getFieldDecorator(\"email\", {\n            rules: [\n              { required: true, message: [leaguge.err] },\n              { validator: this.emailValidate }\n            ]\n          })(<Input type=\"email\" />)}\n        </Form.Item>\n\n        <Form.Item label={leaguge.phone}>\n          {getFieldDecorator(\"phone\", {\n            rules: [{ validator: this.phoneValidate }],\n            initialValue: \" \"\n          })(<Input />)}\n        </Form.Item>\n        <Form.Item label={leaguge.guest}>\n          {getFieldDecorator(\"numGuests\", { initialValue: \"1\" })(\n            <Select style={{ width: 60 }}>\n              <Option value=\"1\">1</Option>\n              <Option value=\"2\">2</Option>\n            </Select>\n          )}\n        </Form.Item>\n        <Form.Item label={leaguge.date}>\n          {getFieldDecorator(\"date\", {\n            rules: [{ required: true, message: [leaguge.err] }]\n          })(\n            <RangePicker\n              leng={leng === \"en\" ? undefined : leng}\n              datesToDisable={this.disabledDates()}\n              dataFromRangePicker={this.dataFromRangePicker}\n            />\n          )}\n          {this.state.err && (\n            <div style={{ color: \"red\" }}>{leaguge.dateErr}</div>\n          )}\n        </Form.Item>\n\n        <Form.Item label={leaguge.wish}>\n          {getFieldDecorator(\"article\", { initialValue: \" \" })(\n            <Input.TextArea />\n          )}\n        </Form.Item>\n\n        <Form.Item className=\"buttons-container\">\n          {/* <Button type=\"primary\"  onClick={this.onCancel}>\n            Cancel\n          </Button> */}\n          <Button type=\"primary\" onClick={this.handleCreate}>\n            {leaguge.ok}\n          </Button>\n        </Form.Item>\n      </Form>\n      // </Modal>\n    );\n  }\n}\nconst mapState = state => ({\n  tasks: state.tasks.find(i => i.quality === choice)\n});\nexport default withRouter(connect(mapState)(Form.create()(BookingForm)));\n","import React from \"react\";\nimport moment from \"moment\";\nimport Helmet from \"react-helmet\";\nimport \"moment/locale/ru\";\nimport \"moment/locale/uk\";\n\nimport DayPickerInput from \"react-day-picker/DayPickerInput\";\n\nimport \"react-day-picker/lib/style.css\";\n\nimport MomentLocaleUtils, {\n  formatDate,\n  parseDate\n} from \"react-day-picker/moment\";\nclass RangePicker extends React.Component {\n  leng = {\n    en: {\n      from: \"From\",\n      to: \"To\"\n    },\n    uk: {\n      from: \"Від\",\n      to: \"До\"\n    },\n    ru: {\n      from: \"C\",\n      to: \"По\"\n    }\n  };\n  constructor(props) {\n    super(props);\n    this.handleFromChange = this.handleFromChange.bind(this);\n    this.handleToChange = this.handleToChange.bind(this);\n    this.state = {\n      from: undefined,\n      to: undefined\n    };\n  }\n\n  showFromMonth() {\n    this.props.onChange(this.state);\n    const { from, to } = this.state;\n\n    if (!from) {\n      return;\n    }\n    if (moment(to).diff(moment(from), \"months\") < 2) {\n      this.to.getDayPicker().showMonth(from);\n    }\n  }\n  handleFromChange(from) {\n    // Change the from date and focus the \"to\" input field\n\n    this.setState({ from }, this.props.onChange(this.state));\n  }\n  handleToChange(to) {\n    this.setState({ to }, this.showFromMonth);\n  }\n  render() {\n    const { from, to } = this.state;\n    const modifiers = { start: from, end: to };\n    let { datesToDisable } = this.props;\n    let datesToDisableTo = [\n      {\n        before: moment()\n          .endOf(\"day\")\n          .toDate()\n      }\n    ];\n    if (datesToDisable) {\n      datesToDisable = [\n        ...datesToDisable,\n        {\n          before: moment()\n            .endOf(\"day\")\n            .toDate()\n        }\n      ];\n      datesToDisableTo = [...datesToDisable, { before: from }];\n    } else {\n      datesToDisable = [\n        {\n          before: moment()\n            .endOf(\"day\")\n            .toDate()\n        }\n      ];\n    }\n\n    return (\n      <div className=\"InputFromTo\">\n        <DayPickerInput\n          value={from}\n          placeholder={this.leng[this.props.leng ? this.props.leng : \"en\"].from}\n          format=\"DD/MM/YYYY\"\n          formatDate={formatDate}\n          parseDate={parseDate}\n          dayPickerProps={{\n            disabledDays: datesToDisable,\n            localeUtils: MomentLocaleUtils,\n            locale: this.props.leng,\n            selectedDays: [from, { from, to }],\n\n            toMonth: to,\n            modifiers,\n            numberOfMonths: 2,\n            onDayClick: () => this.to.getInput().focus()\n          }}\n          onDayChange={this.handleFromChange}\n        />{\" \"}\n        —{\" \"}\n        <span className=\"InputFromTo-to\">\n          <DayPickerInput\n            ref={el => (this.to = el)}\n            value={to}\n            placeholder={this.leng[this.props.leng ? this.props.leng : \"en\"].to}\n            format=\"DD/MM/YYYY\"\n            formatDate={formatDate}\n            parseDate={parseDate}\n            dayPickerProps={{\n              localeUtils: MomentLocaleUtils,\n              locale: this.props.leng,\n              selectedDays: [from, { from, to }],\n              disabledDays: datesToDisableTo,\n              modifiers,\n              month: from,\n              fromMonth: from,\n              numberOfMonths: 2\n            }}\n            onDayChange={this.handleToChange}\n          />\n        </span>\n        <Helmet>\n          <style>{`\n  .InputFromTo .DayPicker-Day--selected:not(.DayPicker-Day--start):not(.DayPicker-Day--end):not(.DayPicker-Day--outside) {\n    background-color: #ffb606 !important;\n    color: #4a90e2;\n  }\n  .InputFromTo .DayPicker-Day {\n    border-radius: 0 !important;\n  }\n  .InputFromTo .DayPicker-Day--start {\n    border-top-left-radius: 50% !important;\n    border-bottom-left-radius: 50% !important;\n  }\n  .InputFromTo .DayPicker-Day--end {\n    border-top-right-radius: 50% !important;\n    border-bottom-right-radius: 50% !important;\n  }\n  .InputFromTo .DayPickerInput-Overlay {\n    width: 550px;\n  }\n  .InputFromTo-to .DayPickerInput-Overlay {\n    margin-left: -198px;\n  }\n`}</style>\n        </Helmet>\n      </div>\n    );\n  }\n}\n\nexport default RangePicker;\n","import { Modal, Form, Select } from \"antd\";\nimport React, { Component } from \"react\";\nimport RangePicker from \"../rangePicker\";\nconst Option = Select.Option;\nclass AddForm extends Component {\n  render() {\n    const {\n      form: { getFieldDecorator },\n      onCancel,\n      onCreate\n    } = this.props;\n\n    return (\n      <Modal\n        onCancel={onCancel}\n        visible\n        onOk={onCreate}\n        title=\"Забронировать все номера на дату\"\n        okText=\"OK\"\n      >\n        <Form layout=\"vertical\">\n          <Form.Item label=\"какие номера забронировать:\">\n            {getFieldDecorator(\"quality\", {\n              rules: [{ required: true, message: \"This Field is required\" }],\n              initialValue: \"regular\"\n            })(\n              <Select style={{ width: 200 }}>\n                <Option value=\"lux\">люкс</Option>\n                <Option value=\"regular\">обычный</Option>\n                <Option value=\"twoBeds\">обыч. с двумя кроватями</Option>\n                <Option value=\"forOne\">для одного</Option>\n              </Select>\n            )}\n          </Form.Item>\n          <Form.Item label=\"Date\">\n            {getFieldDecorator(\"date\", {\n              rules: [{ required: true, message: \"This Field is required\" }]\n            })(<RangePicker />)}\n          </Form.Item>\n        </Form>\n      </Modal>\n    );\n  }\n}\n\nexport default Form.create()(AddForm);\n","import React, { Component } from \"react\";\nimport { Button } from \"antd\";\nimport { connect } from \"react-redux\";\nimport BookAll from \"./BookAll.jsx\";\nimport uuid from \"uuid/v4\";\nimport moment from \"moment\";\nimport { addDateToFirebase } from \"../../firebase\";\nclass AddButton extends Component {\n  state = {\n    visible: false\n  };\n\n  makeArrOfDates = (from, to) => {\n    let arrOfResults = [from];\n    if (from.substr(5, 2) === to.substr(5, 2)) {\n      const fromDay = parseInt(from.substr(8, 2), 10);\n      let result = parseInt(to.substr(8, 2), 10) - fromDay;\n\n      let i = result;\n      for (i; i > 0; i--) {\n        arrOfResults.push(from.substr(0, 8) + (fromDay + i));\n      }\n    } else if (from.substr(5, 2) !== to.substr(5, 2)) {\n      const firstResult = parseInt(to.substr(8, 2), 10);\n      const secondResult = 31 - parseInt(from.substr(8, 2), 10);\n      let i = firstResult;\n\n      for (i; i > 0; i--) {\n        arrOfResults.push(\n          to.substr(0, 8) + (parseInt(to.substr(8, 2), 10) - i + 1)\n        );\n      }\n      let b = secondResult;\n\n      for (b; b > 0; b--) {\n        arrOfResults.push(\n          from.substr(0, 8) + (parseInt(from.substr(8, 2), 10) + b)\n        );\n      }\n    }\n    return arrOfResults;\n  };\n\n  handleCreate = () => {\n    const form = this.formRef.props.form;\n\n    form.validateFields((err, values) => {\n      if (err) return;\n      let from = moment(values.date.from);\n      let to = moment(values.date.to);\n      values.id = uuid();\n      from = from.format(\"YYYY-MM-DD\");\n      to = to.format(\"YYYY-MM-DD\");\n      values.name = \"ADMIN\";\n      values.secondName = \"ADMIN\";\n\n      let arr = [];\n      const ArrOfDates = this.makeArrOfDates(from, to);\n\n      let i = this.props.rooms.find(i => i.quality === values.quality).number;\n      for (i; i > 0; i--) {\n        arr.push(...ArrOfDates);\n      }\n      addDateToFirebase(\n        { ...values, from, to },\n        values.quality,\n\n        arr\n      );\n\n      form.resetFields();\n      this.setState({ visible: false });\n    });\n  };\n\n  // TODO: Recheck and use modern way of refs\n  saveFormRef = formRef => {\n    this.formRef = formRef;\n  };\n\n  render() {\n    return (\n      <div className=\"buttons-change\">\n        <Button\n          style={{ marginLeft: \"20%\" }}\n          type=\"primary\"\n          onClick={() => this.setState({ visible: true })}\n        >\n          {\"Забронировать\"}\n        </Button>\n        {this.state.visible && (\n          <BookAll\n            selected={this.props.selectedRow}\n            wrappedComponentRef={this.saveFormRef}\n            onCancel={() => this.setState({ visible: false })}\n            onCreate={this.handleCreate}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapState = state => ({\n  rooms: state.tasks\n});\nexport default connect(mapState)(AddButton);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Menu, Icon } from \"antd\";\nimport { setChoice } from \"../../redux/actions\";\nimport AddButton from \"./ModalBtn\";\nclass LeftMenu extends Component {\n  handleClick = e => {\n    this.props.dispatch(setChoice(e.key));\n  };\n\n  render() {\n    return (\n      <Menu\n        onClick={this.handleClick}\n        style={{ width: 256 }}\n        defaultSelectedKeys={[\"1\"]}\n        defaultOpenKeys={[\"sub1\"]}\n        mode=\"inline\"\n      >\n        <Menu.Item key=\"lux\">\n          <span>\n            <Icon type=\"crown\" />\n            <span>люкс</span>\n          </span>\n        </Menu.Item>\n        <Menu.Item key=\"regular\">\n          <span>\n            <Icon type=\"key\" />\n            <span>обычный</span>\n          </span>\n        </Menu.Item>\n        <Menu.Item key=\"twoBeds\">\n          <span>\n            <Icon type=\"team\" />\n            <span>обычный с двумя кроватями</span>\n          </span>\n        </Menu.Item>\n        <Menu.Item key=\"forOne\">\n          <span>\n            <Icon type=\"user\" />\n            <span>для одного</span>\n          </span>\n        </Menu.Item>\n        <AddButton />\n      </Menu>\n    );\n  }\n}\n\nexport default connect()(LeftMenu);\n","import React, { Component } from \"react\";\nimport AdminTable from \"./table\";\nimport { connect } from \"react-redux\";\nimport Auth from \"./auth\";\nimport { getTasksThunk } from \"../../redux/actions\";\nimport Menu from \"./menu.jsx\";\nclass Admin extends Component {\n  componentDidMount() {\n    this.props.dispatch(getTasksThunk());\n  }\n\n  render() {\n    return window.localStorage.getItem(\"accesForRoomAdminPanel\") ? (\n      <div className=\"admin-page-container\">\n        <Menu />\n        <AdminTable />\n      </div>\n    ) : (\n      <Auth />\n    );\n  }\n}\n\nexport default connect()(Admin);\n","import React, { Component } from \"react\";\n\nimport \"./App.css\";\nimport Admin from \"./components/adminPage/mainAdminComponent\";\nimport BookingForm from \"./components/bookingForm\";\nimport { withRouter } from \"react-router-dom\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        {this.props.location.hash.substr(1) === \"admin\" ? (\n          <Admin />\n        ) : (\n          <BookingForm />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport App from \"./App\";\n\nimport store from \"./redux/actions\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <Route path=\"/\" component={App} />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}